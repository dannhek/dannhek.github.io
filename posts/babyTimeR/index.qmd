---
title: "First CRAN Package: babyTimeR"
author: "Dann Hekman"
date: "2025-02-19"
categories: 
  - CRAN
  - R
  - Parenting
---

# Introduction

Kids, amiright?

[BabyTime](https://www.babytime.care/) is an app to track things like sleep, feedings, diapers, and the like for your bundle of sleep-depriving, angry joy. They've got some data visualization tools in the app, but for data nerds who want to take this to the next level, I made this package. 

# Installation

```r
install.packages("babyTimeR")
# devtools::install_github('dannhek/babyTimeR')
```

# Getting Data

See the app for the latest workflow, but here's how it worked as of the writing of this document for an iPhone and Macbook Air.

On my iPhone: 

::: {.columns}

::: {.column width="30%"}

In the app, go to settings, then export data

<img src="bt settings.PNG" width="100px"/>

:::

::: {.column width="30%"}

Daily Record (txt)

<img src="export.PNG" width="100px"/>

:::

::: {.column width="40%"}

Follow the instructions here to pull the files onto your computer.

<img src="export instructions.PNG" width="100px"/>

:::

::: 

Pulling the files from finder 

<img src="in finder.png" width="300px"/>


# Reading in data

```{r}
#| eval: false
library(babyTimeR)
sample_bt_list <- process_one_directory(
    directory = file.path('RawData'),
    verbose = TRUE 
)
```


# Features

This will read in data into a `Clean BT List DB` object, which is a `list` object with a specified structure. Each element of the list corresponds to the data type recorded in BabyTime. 

```{r}
#| eval: false
# Stores everything to a special list
class(sample_bt_list)

# Elements of the list correspond to the data type recorded in BabyTime. 
names(sample_bt_list)

# Includes tags and memos
sample_bt_list$medicine |>
    head() |>
    gt::gt()
```

# Sleep Graph Example

Obviously, one of the most salient life changes for new parents is sleep, which is what drove me to write this package so we could analyze the sleep changes over time of my daughter. 

```{r}
#| eval: false

# Sample Code. Not Run.
library(tidyverse)
library(glue)
library(babyTimeR)
`%+%` <- function(lhs,rhs) {paste0(lhs, rhs)}

# file.remove('sample_baby_db.RDS')
if (file.exists('sample_baby_db.RDS')) {
	sample_baby_db <- readRDS('sample_baby_db.RDS')
} else {
	sample_baby_db <- process_one_directory('Raw Data', 'sample_baby_db.RDS')
}

display_time <- function(mins) {glue::glue("{mins %/% 60}h{mins %% 60}m")}
max_na <- function(...) {
	x <- c(...)
	if	(all(is.na(x))) {
		return(NA)
	} else {
		return(max(x, na.rm = TRUE))
	}
}

sleep_df <- sample_baby_db$sleep |>
	mutate(
		duration_min = readr::parse_number(duration),
		sleep_night = case_when(
			hour(start_dttm) <= 6 ~ glue("{format(start_dttm-days(1),'%Y%m%d')}-{format(start_dttm,'%Y%m%d')}"),
			hour(start_dttm) >= 18~ glue("{format(start_dttm,'%Y%m%d')}-{format(start_dttm+days(1),'%Y%m%d')}"),
			.default = 'Daytime Nap'
		) 
	) |>
	select(-baby_name,-memo,-type) |>
	distinct()

gg_sleep_df <- sleep_df |>
	filter(sleep_night != 'Daytime Nap') |>
	arrange(start_dttm) |> 
	group_by(sleep_night) |> 
	mutate(
		time_awake = difftime(start_dttm, lag(end_dttm), units = 'mins')
	) |> 
	summarise(
		n_sleep_entries = n(), 
		longest_sleep = max_na(duration_min), 
		wake_ups = sum(time_awake > minutes(15), na.rm = T),
		longest_wake_up = max_na(time_awake)
	) 

vline_df <- read.csv(text=
"date,event
2024-01-16,Return to work (Dad)
2024-02-22,Baby Merlin's Magic Sleep Suit
2024-03-02,Return to work (Mom) & Start Daycare
2024-04-28,Own Room; Ferber Sleep Training
") |> 
	mutate(date = ymd(date))

age_df <- read.csv(text=
"date,age_months
2023-11-01,Just Born
2023-12-01,1 month
2024-01-01,2 months
2024-02-01,3 months
2024-03-01,4 months
2024-04-01,5 months
2024-05-01,6 months
2024-06-01,7 months
2024-07-01,8 months
2024-08-01,9 months
2024-09-01,10 months
2024-10-01,11 months
2024-11-01,12 months
") |>
	mutate(
		date = ymd(date),
		end = lead(date) - days(1)
	)


colors <- RColorBrewer::brewer.pal(name = 'Set1', n = 3)
ratio <- 60
ggplot(
    gg_sleep_df |> drop_na(), 
    aes(x = ymd(substr(sleep_night,1,8)))
) +
	# Sleep Length
	geom_bar(
        aes(
            fill = 'Longest Sleep of Night',
            y = longest_sleep
            ), 
        stat = 'identity', 
        alpha = 0.4
    ) +
	geom_line(
        aes(
            color = 'Moving Average (Longest Sleep)',
            y = zoo::rollmean(longest_sleep, 7, fill = NA, na.rm = T)
        )
    ) +
	# Sleep Count
	geom_line(
        aes(
            color = 'Number of Wake-ups', 
            y = ratio*n_sleep_entries
        )
    ) +
	# Wake Length
	geom_point(aes(
        shape = 'Longest Wake Period', 
        y = as.numeric(longest_wake_up)
    )) +
	# Events
	geom_vline(
        data = vline_df, 
        aes(xintercept = date), 
        linetype = 'dotted'
    ) + 
	geom_text(
        data = vline_df,
        aes(x = date, y = 0, label = event), 
        angle = 90, vjust = 0, hjust = 0
    ) + 
	# Age
	geom_label(
        data = age_df, 
        aes(x = date, y = ratio*10, label = age_months), 
        hjust = 0
    ) +
	# Scales 
	scale_x_date(
        name = 'Date',
        date_breaks = '3 weeks',
        date_labels = '%d%b%y',
        limits = c(as.Date('2023-11-29'), as.Date('2025-01-31')),
        expand = expansion(0)
    ) +
	scale_y_continuous(
        name = 'Longest Sleep',
        labels = display_time,
        limits = c(0,12*ratio),
        breaks = ratio*seq(0.5,11.5,1),
		sec.axis = sec_axis(
            ~./ratio,
            name = 'Number of Wake-ups',
            breaks = c(0:10)
        )
	) +
	scale_color_manual(
        name = '', 
        values = colors[2:3]
    ) +
	scale_fill_manual(
        name = '', 
        values = colors[1]
    ) +
	scale_shape(name = '') +
	# Theme/Look'n'Feel
	theme_minimal() +
	theme(
		legend.position = 'bottom',
		axis.text.x = element_text(angle = 60, vjust = 1, hjust = 1),
		plot.title.position = 'plot',
		plot.caption.position = 'plot'
	) +
	labs(
		title = 'Overnight Sleep Trends for My Baby',
		subtitle = 'Includes sleeps recorded as beginning between 6p and 7a',
		caption = 'Data collected via BabyTime app'
	)
```

::: {.column-page}

<img src="SleepTrend.png"/>

:::

# Conclusion

This is obviously just one possible use. If you keep particularly good record of what foods you give your baby, there are lots of great visualization and infographic oppoartunities there. If anyone wants to build an ML model to identify factures that minimize wake-ups at night, I'd love to hear your results. 

I hope this is a helpful way for you to track your little one's activity and use the results to improve your care and life. 